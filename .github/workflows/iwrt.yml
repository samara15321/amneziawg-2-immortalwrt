name: Create Release aarch64_generic_GOHOST

on:
  push:
    tags:
      - "iwrt*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "23.05.6"
            pkgarch: aarch64_generic
            target: rockchip
            subtarget: armv8
            vermagic: "1165e14f95a921713988260b06d8b0ab"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Build
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"
          wget https://raw.githubusercontent.com/immortalwrt/immortalwrt/v${{ matrix.build_env.tag }}/feeds.conf.default -O feeds.conf
          echo "src-git awgopenwrt https://github.com/samara15321/amneziawg-2-immortalwrt.git" >> ./feeds.conf
          ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: Patch Go version
        run: |
          GO_MK=$(find feeds/packages/lang -type f -name Makefile | grep golang | head -n1)
          echo "Using Go Makefile: $GO_MK"
          sed -i 's/PKG_VERSION:=.*/PKG_VERSION:=1.24.4/' $GO_MK
          sed -i 's/PKG_HASH:=.*/PKG_HASH:=36f380a6a912d92bc3d27837aa19fa5c4460eb942ab757669497721c3d5c41e2/' $GO_MK
          grep "PKG_VERSION" $GO_MK
          grep "PKG_HASH" $GO_MK

          # Build OpenWrt
          wget https://downloads.immortalwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_amneziawg-go=y" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config
          make defconfig

      - name: Build OpenWrt toolchain and target
        run: |
          make tools/install -j$(nproc) V=s
          make toolchain/install -j$(nproc) V=s
          make target/linux/compile -j$(nproc) V=s

      - name: Build AmneziaWG packages
        run: |
          make package/amneziawg-go/compile V=s
          make package/kmod-amneziawg/compile V=s
          make package/amneziawg-tools/compile V=s
          make package/luci-proto-amneziawg/compile V=s

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-proto-amneziawg_*.ipk awgrelease/luci-proto-amneziawg_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-go_*.ipk awgrelease/amneziawg-go_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
